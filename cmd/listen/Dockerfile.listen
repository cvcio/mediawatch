FROM golang:1.18-alpine3.15
ARG version

# Install certificates and git
RUN apk add --update --no-cache ca-certificates git

# Create and use a directory where our project will be build
RUN mkdir -p /go/src/github.com/cvcio/mediawatch/
WORKDIR /go/src/github.com/cvcio/mediawatch/

# COPY go.mod and go.sum files to the workspace
COPY go.mod /go/src/github.com/cvcio/mediawatch/
COPY go.sum /go/src/github.com/cvcio/mediawatch/

# Get dependancies - will also be cached if we won't change mod/sum
#RUN go mod vendor

# COPY the source code
COPY cmd/ /go/src/github.com/cvcio/mediawatch/cmd/
COPY internal/ /go/src/github.com/cvcio/mediawatch/internal/
COPY models/ /go/src/github.com/cvcio/mediawatch/models/
COPY pkg/ /go/src/github.com/cvcio/mediawatch/pkg/
COPY proto/ /go/src/github.com/cvcio/mediawatch/proto/
COPY vendor/ /go/src/github.com/cvcio/mediawatch/vendor/

WORKDIR /go/src/github.com/cvcio/mediawatch/cmd/listen/
RUN GO111MODULE=on GOFLAGS=-mod=vendor CGO_ENABLED=0 GOOS=linux go build -v -ldflags "-X github.com/cvcio/mediawatch/cmd/listen/main.version=$version" -a -installsuffix cgo -o listen .

FROM alpine:3.15
RUN apk --no-cache add ca-certificates
WORKDIR /listen/
COPY --from=0 /go/src/github.com/cvcio/mediawatch/cmd/listen .
ENTRYPOINT ["/listen/listen"]
