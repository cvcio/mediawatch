# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mediawatch.passages.v2 import passage_pb2 as mediawatch_dot_passages_dot_v2_dot_passage__pb2


class PassageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePassage = channel.unary_unary(
                '/mediawatch.passages.v2.PassageService/CreatePassage',
                request_serializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.Passage.SerializeToString,
                response_deserializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.Passage.FromString,
                )
        self.GetPassages = channel.unary_unary(
                '/mediawatch.passages.v2.PassageService/GetPassages',
                request_serializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.QueryPassage.SerializeToString,
                response_deserializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.PassageList.FromString,
                )


class PassageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePassage(self, request, context):
        """create a new passage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPassages(self, request, context):
        """get list of passages by query
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PassageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePassage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePassage,
                    request_deserializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.Passage.FromString,
                    response_serializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.Passage.SerializeToString,
            ),
            'GetPassages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPassages,
                    request_deserializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.QueryPassage.FromString,
                    response_serializer=mediawatch_dot_passages_dot_v2_dot_passage__pb2.PassageList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mediawatch.passages.v2.PassageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PassageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePassage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediawatch.passages.v2.PassageService/CreatePassage',
            mediawatch_dot_passages_dot_v2_dot_passage__pb2.Passage.SerializeToString,
            mediawatch_dot_passages_dot_v2_dot_passage__pb2.Passage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPassages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediawatch.passages.v2.PassageService/GetPassages',
            mediawatch_dot_passages_dot_v2_dot_passage__pb2.QueryPassage.SerializeToString,
            mediawatch_dot_passages_dot_v2_dot_passage__pb2.PassageList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
