// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: mediawatch/scrape/v2/scrape.proto

package scrapev2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP(), []int{0}
}

// RequestArticle for SimpleScrape
type SimpleScrapeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed string `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Lang string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *SimpleScrapeRequest) Reset() {
	*x = SimpleScrapeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleScrapeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleScrapeRequest) ProtoMessage() {}

func (x *SimpleScrapeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleScrapeRequest.ProtoReflect.Descriptor instead.
func (*SimpleScrapeRequest) Descriptor() ([]byte, []int) {
	return file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP(), []int{1}
}

func (x *SimpleScrapeRequest) GetFeed() string {
	if x != nil {
		return x.Feed
	}
	return ""
}

func (x *SimpleScrapeRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SimpleScrapeRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

// RequestStream for Scrape in Streaming mode (ex. svc-listen)
type ScrapeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed       string `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Lang       string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	ScreenName string `protobuf:"bytes,4,opt,name=screen_name,json=screenName,proto3" json:"screen_name,omitempty"`
	CrawledAt  string `protobuf:"bytes,5,opt,name=crawled_at,json=crawledAt,proto3" json:"crawled_at,omitempty"`
}

func (x *ScrapeRequest) Reset() {
	*x = ScrapeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScrapeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScrapeRequest) ProtoMessage() {}

func (x *ScrapeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScrapeRequest.ProtoReflect.Descriptor instead.
func (*ScrapeRequest) Descriptor() ([]byte, []int) {
	return file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP(), []int{2}
}

func (x *ScrapeRequest) GetFeed() string {
	if x != nil {
		return x.Feed
	}
	return ""
}

func (x *ScrapeRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ScrapeRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *ScrapeRequest) GetScreenName() string {
	if x != nil {
		return x.ScreenName
	}
	return ""
}

func (x *ScrapeRequest) GetCrawledAt() string {
	if x != nil {
		return x.CrawledAt
	}
	return ""
}

// Content of the Scraped Article or Stream
type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body        string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Authors     []string `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Tags        []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	PublishedAt string   `protobuf:"bytes,5,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Description string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Image       string   `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP(), []int{3}
}

func (x *Content) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Content) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Content) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *Content) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Content) GetPublishedAt() string {
	if x != nil {
		return x.PublishedAt
	}
	return ""
}

func (x *Content) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Content) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

// Data for the Response Object
type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *Content `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP(), []int{4}
}

func (x *Data) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

// Response Object
type ReloadPassagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success, error
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 200, 500
	Code int32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// message
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// data Object {}
	Data *Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReloadPassagesResponse) Reset() {
	*x = ReloadPassagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadPassagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadPassagesResponse) ProtoMessage() {}

func (x *ReloadPassagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadPassagesResponse.ProtoReflect.Descriptor instead.
func (*ReloadPassagesResponse) Descriptor() ([]byte, []int) {
	return file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP(), []int{5}
}

func (x *ReloadPassagesResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReloadPassagesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReloadPassagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReloadPassagesResponse) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// Response Object
type ScrapeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success, error
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 200, 500
	Code int32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// message
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// data Object {}
	Data *Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ScrapeResponse) Reset() {
	*x = ScrapeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScrapeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScrapeResponse) ProtoMessage() {}

func (x *ScrapeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_scrape_v2_scrape_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScrapeResponse.ProtoReflect.Descriptor instead.
func (*ScrapeResponse) Descriptor() ([]byte, []int) {
	return file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP(), []int{6}
}

func (x *ScrapeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ScrapeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ScrapeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScrapeResponse) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_mediawatch_scrape_v2_scrape_proto protoreflect.FileDescriptor

var file_mediawatch_scrape_v2_scrape_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x72, 0x61,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xbc, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x3f,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x8e, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61,
	0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x86, 0x01, 0x0a, 0x0e, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xa8, 0x02, 0x0a, 0x0d, 0x53, 0x63,
	0x72, 0x61, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x53,
	0x63, 0x72, 0x61, 0x70, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x63, 0x72, 0x61,
	0x70, 0x65, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0xd8, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x76,
	0x32, 0x42, 0x0b, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x76, 0x63,
	0x69, 0x6f, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x2f, 0x76, 0x32, 0x3b, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x76, 0x32, 0xa2,
	0x02, 0x03, 0x4d, 0x53, 0x58, 0xaa, 0x02, 0x14, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x14, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5c, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x5c, 0x56, 0x32, 0xe2, 0x02, 0x20, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x5c, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x3a, 0x3a, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x3a, 0x3a, 0x56, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mediawatch_scrape_v2_scrape_proto_rawDescOnce sync.Once
	file_mediawatch_scrape_v2_scrape_proto_rawDescData = file_mediawatch_scrape_v2_scrape_proto_rawDesc
)

func file_mediawatch_scrape_v2_scrape_proto_rawDescGZIP() []byte {
	file_mediawatch_scrape_v2_scrape_proto_rawDescOnce.Do(func() {
		file_mediawatch_scrape_v2_scrape_proto_rawDescData = protoimpl.X.CompressGZIP(file_mediawatch_scrape_v2_scrape_proto_rawDescData)
	})
	return file_mediawatch_scrape_v2_scrape_proto_rawDescData
}

var file_mediawatch_scrape_v2_scrape_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_mediawatch_scrape_v2_scrape_proto_goTypes = []interface{}{
	(*Empty)(nil),                  // 0: mediawatch.scrape.v2.Empty
	(*SimpleScrapeRequest)(nil),    // 1: mediawatch.scrape.v2.SimpleScrapeRequest
	(*ScrapeRequest)(nil),          // 2: mediawatch.scrape.v2.ScrapeRequest
	(*Content)(nil),                // 3: mediawatch.scrape.v2.Content
	(*Data)(nil),                   // 4: mediawatch.scrape.v2.Data
	(*ReloadPassagesResponse)(nil), // 5: mediawatch.scrape.v2.ReloadPassagesResponse
	(*ScrapeResponse)(nil),         // 6: mediawatch.scrape.v2.ScrapeResponse
}
var file_mediawatch_scrape_v2_scrape_proto_depIdxs = []int32{
	3, // 0: mediawatch.scrape.v2.Data.content:type_name -> mediawatch.scrape.v2.Content
	4, // 1: mediawatch.scrape.v2.ReloadPassagesResponse.data:type_name -> mediawatch.scrape.v2.Data
	4, // 2: mediawatch.scrape.v2.ScrapeResponse.data:type_name -> mediawatch.scrape.v2.Data
	2, // 3: mediawatch.scrape.v2.ScrapeService.Scrape:input_type -> mediawatch.scrape.v2.ScrapeRequest
	1, // 4: mediawatch.scrape.v2.ScrapeService.SimpleScrape:input_type -> mediawatch.scrape.v2.SimpleScrapeRequest
	0, // 5: mediawatch.scrape.v2.ScrapeService.ReloadPassages:input_type -> mediawatch.scrape.v2.Empty
	6, // 6: mediawatch.scrape.v2.ScrapeService.Scrape:output_type -> mediawatch.scrape.v2.ScrapeResponse
	6, // 7: mediawatch.scrape.v2.ScrapeService.SimpleScrape:output_type -> mediawatch.scrape.v2.ScrapeResponse
	5, // 8: mediawatch.scrape.v2.ScrapeService.ReloadPassages:output_type -> mediawatch.scrape.v2.ReloadPassagesResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mediawatch_scrape_v2_scrape_proto_init() }
func file_mediawatch_scrape_v2_scrape_proto_init() {
	if File_mediawatch_scrape_v2_scrape_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mediawatch_scrape_v2_scrape_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_scrape_v2_scrape_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleScrapeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_scrape_v2_scrape_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScrapeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_scrape_v2_scrape_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_scrape_v2_scrape_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_scrape_v2_scrape_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadPassagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_scrape_v2_scrape_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScrapeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mediawatch_scrape_v2_scrape_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mediawatch_scrape_v2_scrape_proto_goTypes,
		DependencyIndexes: file_mediawatch_scrape_v2_scrape_proto_depIdxs,
		MessageInfos:      file_mediawatch_scrape_v2_scrape_proto_msgTypes,
	}.Build()
	File_mediawatch_scrape_v2_scrape_proto = out.File
	file_mediawatch_scrape_v2_scrape_proto_rawDesc = nil
	file_mediawatch_scrape_v2_scrape_proto_goTypes = nil
	file_mediawatch_scrape_v2_scrape_proto_depIdxs = nil
}
