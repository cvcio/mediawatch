// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: mediawatch/posts/v2/post.proto

package postsv2

import (
	v2 "github.com/cvcio/mediawatch/pkg/mediawatch/articles/v2"
	v22 "github.com/cvcio/mediawatch/pkg/mediawatch/common/v2"
	_ "github.com/cvcio/mediawatch/pkg/mediawatch/enrich/v2"
	v21 "github.com/cvcio/mediawatch/pkg/mediawatch/feeds/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article  *v2.Article `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	Feed     *v21.Feed   `protobuf:"bytes,2,opt,name=feed,proto3" json:"feed,omitempty"`
	RelCount int64       `protobuf:"varint,3,opt,name=rel_count,json=relCount,proto3" json:"rel_count,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_posts_v2_post_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_posts_v2_post_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_mediawatch_posts_v2_post_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetArticle() *v2.Article {
	if x != nil {
		return x.Article
	}
	return nil
}

func (x *Post) GetFeed() *v21.Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *Post) GetRelCount() int64 {
	if x != nil {
		return x.RelCount
	}
	return 0
}

type PostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostRequest) Reset() {
	*x = PostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_posts_v2_post_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRequest) ProtoMessage() {}

func (x *PostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_posts_v2_post_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRequest.ProtoReflect.Descriptor instead.
func (*PostRequest) Descriptor() ([]byte, []int) {
	return file_mediawatch_posts_v2_post_proto_rawDescGZIP(), []int{1}
}

type PostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Post         `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *v22.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PostResponse) Reset() {
	*x = PostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mediawatch_posts_v2_post_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostResponse) ProtoMessage() {}

func (x *PostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mediawatch_posts_v2_post_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostResponse.ProtoReflect.Descriptor instead.
func (*PostResponse) Descriptor() ([]byte, []int) {
	return file_mediawatch_posts_v2_post_proto_rawDescGZIP(), []int{2}
}

func (x *PostResponse) GetData() []*Post {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PostResponse) GetPagination() *v22.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_mediawatch_posts_v2_post_proto protoreflect.FileDescriptor

var file_mediawatch_posts_v2_post_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68,
	0x2f, 0x76, 0x32, 0x2f, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x7f, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0xfd, 0x03, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x20,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12,
	0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x42, 0xcf, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x76, 0x32, 0x42,
	0x09, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x76, 0x63, 0x69, 0x6f, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2f, 0x76,
	0x32, 0x3b, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x50, 0x58, 0xaa,
	0x02, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x5c, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1f, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5c, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x5c, 0x56,
	0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x77, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x3a, 0x50, 0x6f, 0x73, 0x74,
	0x73, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mediawatch_posts_v2_post_proto_rawDescOnce sync.Once
	file_mediawatch_posts_v2_post_proto_rawDescData = file_mediawatch_posts_v2_post_proto_rawDesc
)

func file_mediawatch_posts_v2_post_proto_rawDescGZIP() []byte {
	file_mediawatch_posts_v2_post_proto_rawDescOnce.Do(func() {
		file_mediawatch_posts_v2_post_proto_rawDescData = protoimpl.X.CompressGZIP(file_mediawatch_posts_v2_post_proto_rawDescData)
	})
	return file_mediawatch_posts_v2_post_proto_rawDescData
}

var file_mediawatch_posts_v2_post_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mediawatch_posts_v2_post_proto_goTypes = []interface{}{
	(*Post)(nil),           // 0: mediawatch.posts.v2.Post
	(*PostRequest)(nil),    // 1: mediawatch.posts.v2.PostRequest
	(*PostResponse)(nil),   // 2: mediawatch.posts.v2.PostResponse
	(*v2.Article)(nil),     // 3: mediawatch.articles.v2.Article
	(*v21.Feed)(nil),       // 4: mediawatch.feeds.v2.Feed
	(*v22.Pagination)(nil), // 5: mediawatch.common.v2.Pagination
}
var file_mediawatch_posts_v2_post_proto_depIdxs = []int32{
	3,  // 0: mediawatch.posts.v2.Post.article:type_name -> mediawatch.articles.v2.Article
	4,  // 1: mediawatch.posts.v2.Post.feed:type_name -> mediawatch.feeds.v2.Feed
	0,  // 2: mediawatch.posts.v2.PostResponse.data:type_name -> mediawatch.posts.v2.Post
	5,  // 3: mediawatch.posts.v2.PostResponse.pagination:type_name -> mediawatch.common.v2.Pagination
	1,  // 4: mediawatch.posts.v2.PostService.GetPost:input_type -> mediawatch.posts.v2.PostRequest
	1,  // 5: mediawatch.posts.v2.PostService.GetPosts:input_type -> mediawatch.posts.v2.PostRequest
	1,  // 6: mediawatch.posts.v2.PostService.CreatePost:input_type -> mediawatch.posts.v2.PostRequest
	1,  // 7: mediawatch.posts.v2.PostService.UpdatePost:input_type -> mediawatch.posts.v2.PostRequest
	1,  // 8: mediawatch.posts.v2.PostService.DeletePost:input_type -> mediawatch.posts.v2.PostRequest
	1,  // 9: mediawatch.posts.v2.PostService.StreamPosts:input_type -> mediawatch.posts.v2.PostRequest
	2,  // 10: mediawatch.posts.v2.PostService.GetPost:output_type -> mediawatch.posts.v2.PostResponse
	2,  // 11: mediawatch.posts.v2.PostService.GetPosts:output_type -> mediawatch.posts.v2.PostResponse
	2,  // 12: mediawatch.posts.v2.PostService.CreatePost:output_type -> mediawatch.posts.v2.PostResponse
	2,  // 13: mediawatch.posts.v2.PostService.UpdatePost:output_type -> mediawatch.posts.v2.PostResponse
	2,  // 14: mediawatch.posts.v2.PostService.DeletePost:output_type -> mediawatch.posts.v2.PostResponse
	2,  // 15: mediawatch.posts.v2.PostService.StreamPosts:output_type -> mediawatch.posts.v2.PostResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_mediawatch_posts_v2_post_proto_init() }
func file_mediawatch_posts_v2_post_proto_init() {
	if File_mediawatch_posts_v2_post_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mediawatch_posts_v2_post_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_posts_v2_post_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mediawatch_posts_v2_post_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mediawatch_posts_v2_post_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mediawatch_posts_v2_post_proto_goTypes,
		DependencyIndexes: file_mediawatch_posts_v2_post_proto_depIdxs,
		MessageInfos:      file_mediawatch_posts_v2_post_proto_msgTypes,
	}.Build()
	File_mediawatch_posts_v2_post_proto = out.File
	file_mediawatch_posts_v2_post_proto_rawDesc = nil
	file_mediawatch_posts_v2_post_proto_goTypes = nil
	file_mediawatch_posts_v2_post_proto_depIdxs = nil
}
